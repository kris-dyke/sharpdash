/* 
 * API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;

namespace pointofsale.cloud.doordash.Model
{
    /// <summary>
    /// StoreInfo
    /// </summary>
    [DataContract]
    public class StoreInfo :  IEquatable<StoreInfo>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="StoreInfo" /> class.
        /// </summary>
        /// <param name="providerName">Provider name.</param>
        /// <param name="merchantSuppliedId">Partner specified ID for the store.</param>
        /// <param name="isActive">Store is active.</param>
        /// <param name="isOrderProtocolPos">Current order protocol is POS.</param>
        /// <param name="autoReleaseEnabled">Auto order release feature is enabled.</param>
        /// <param name="autoReleaseDistance">Radius of auto order release in meters.</param>
        /// <param name="specialInstructionsMaxLength">Max length for special instructions.</param>
        /// <param name="currentDeactivations">Current store deactivations.</param>
        public StoreInfo(string providerName = default(string), string merchantSuppliedId = default(string), bool? isActive = default(bool?), bool? isOrderProtocolPos = default(bool?), bool? autoReleaseEnabled = default(bool?), decimal? autoReleaseDistance = default(decimal?), int? specialInstructionsMaxLength = default(int?), List<StoreDeactivation> currentDeactivations = default(List<StoreDeactivation>))
        {
            ProviderName = providerName;
            MerchantSuppliedId = merchantSuppliedId;
            IsActive = isActive;
            IsOrderProtocolPos = isOrderProtocolPos;
            AutoReleaseEnabled = autoReleaseEnabled;
            AutoReleaseDistance = autoReleaseDistance;
            SpecialInstructionsMaxLength = specialInstructionsMaxLength;
            CurrentDeactivations = currentDeactivations;
        }
        
        /// <summary>
        /// Provider name
        /// </summary>
        /// <value>Provider name</value>
        [DataMember(Name="provider_name", EmitDefaultValue=false)]
        public string ProviderName { get; set; }

        /// <summary>
        /// Partner specified ID for the store
        /// </summary>
        /// <value>Partner specified ID for the store</value>
        [DataMember(Name="merchant_supplied_id", EmitDefaultValue=false)]
        public string MerchantSuppliedId { get; set; }

        /// <summary>
        /// Store is active
        /// </summary>
        /// <value>Store is active</value>
        [DataMember(Name="is_active", EmitDefaultValue=false)]
        public bool? IsActive { get; set; }

        /// <summary>
        /// Current order protocol is POS
        /// </summary>
        /// <value>Current order protocol is POS</value>
        [DataMember(Name="is_order_protocol_pos", EmitDefaultValue=false)]
        public bool? IsOrderProtocolPos { get; set; }

        /// <summary>
        /// Auto order release feature is enabled
        /// </summary>
        /// <value>Auto order release feature is enabled</value>
        [DataMember(Name="auto_release_enabled", EmitDefaultValue=false)]
        public bool? AutoReleaseEnabled { get; set; }

        /// <summary>
        /// Radius of auto order release in meters
        /// </summary>
        /// <value>Radius of auto order release in meters</value>
        [DataMember(Name="auto_release_distance", EmitDefaultValue=false)]
        public decimal? AutoReleaseDistance { get; set; }

        /// <summary>
        /// Max length for special instructions
        /// </summary>
        /// <value>Max length for special instructions</value>
        [DataMember(Name="special_instructions_max_length", EmitDefaultValue=false)]
        public int? SpecialInstructionsMaxLength { get; set; }

        /// <summary>
        /// Current store deactivations
        /// </summary>
        /// <value>Current store deactivations</value>
        [DataMember(Name="current_deactivations", EmitDefaultValue=false)]
        public List<StoreDeactivation> CurrentDeactivations { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class StoreInfo {\n");
            sb.Append("  ProviderName: ").Append(ProviderName).Append("\n");
            sb.Append("  MerchantSuppliedId: ").Append(MerchantSuppliedId).Append("\n");
            sb.Append("  IsActive: ").Append(IsActive).Append("\n");
            sb.Append("  IsOrderProtocolPos: ").Append(IsOrderProtocolPos).Append("\n");
            sb.Append("  AutoReleaseEnabled: ").Append(AutoReleaseEnabled).Append("\n");
            sb.Append("  AutoReleaseDistance: ").Append(AutoReleaseDistance).Append("\n");
            sb.Append("  SpecialInstructionsMaxLength: ").Append(SpecialInstructionsMaxLength).Append("\n");
            sb.Append("  CurrentDeactivations: ").Append(CurrentDeactivations).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return Equals(input as StoreInfo);
        }

        /// <summary>
        /// Returns true if StoreInfo instances are equal
        /// </summary>
        /// <param name="input">Instance of StoreInfo to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(StoreInfo input)
        {
            if (input == null)
                return false;

            return 
                (
                    ProviderName == input.ProviderName ||
                    ProviderName != null &&
                    ProviderName.Equals(input.ProviderName)
                ) && 
                (
                    MerchantSuppliedId == input.MerchantSuppliedId ||
                    MerchantSuppliedId != null &&
                    MerchantSuppliedId.Equals(input.MerchantSuppliedId)
                ) && 
                (
                    IsActive == input.IsActive ||
                    IsActive != null &&
                    IsActive.Equals(input.IsActive)
                ) && 
                (
                    IsOrderProtocolPos == input.IsOrderProtocolPos ||
                    IsOrderProtocolPos != null &&
                    IsOrderProtocolPos.Equals(input.IsOrderProtocolPos)
                ) && 
                (
                    AutoReleaseEnabled == input.AutoReleaseEnabled ||
                    AutoReleaseEnabled != null &&
                    AutoReleaseEnabled.Equals(input.AutoReleaseEnabled)
                ) && 
                (
                    AutoReleaseDistance == input.AutoReleaseDistance ||
                    AutoReleaseDistance != null &&
                    AutoReleaseDistance.Equals(input.AutoReleaseDistance)
                ) && 
                (
                    SpecialInstructionsMaxLength == input.SpecialInstructionsMaxLength ||
                    SpecialInstructionsMaxLength != null &&
                    SpecialInstructionsMaxLength.Equals(input.SpecialInstructionsMaxLength)
                ) && 
                (
                    CurrentDeactivations == input.CurrentDeactivations ||
                    CurrentDeactivations != null &&
                    CurrentDeactivations.SequenceEqual(input.CurrentDeactivations)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (ProviderName != null)
                    hashCode = hashCode * 59 + ProviderName.GetHashCode();
                if (MerchantSuppliedId != null)
                    hashCode = hashCode * 59 + MerchantSuppliedId.GetHashCode();
                if (IsActive != null)
                    hashCode = hashCode * 59 + IsActive.GetHashCode();
                if (IsOrderProtocolPos != null)
                    hashCode = hashCode * 59 + IsOrderProtocolPos.GetHashCode();
                if (AutoReleaseEnabled != null)
                    hashCode = hashCode * 59 + AutoReleaseEnabled.GetHashCode();
                if (AutoReleaseDistance != null)
                    hashCode = hashCode * 59 + AutoReleaseDistance.GetHashCode();
                if (SpecialInstructionsMaxLength != null)
                    hashCode = hashCode * 59 + SpecialInstructionsMaxLength.GetHashCode();
                if (CurrentDeactivations != null)
                    hashCode = hashCode * 59 + CurrentDeactivations.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
