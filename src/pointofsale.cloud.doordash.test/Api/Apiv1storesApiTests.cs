/*
 * API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using NUnit.Framework;
using pointofsale.cloud.doordash.Api;

namespace pointofsale.cloud.doordash.test.Api
{
    /// <summary>
    ///  Class for testing Apiv1storesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class Apiv1storesApiTests
    {
        private StoresApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new StoresApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of Apiv1storesApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' Apiv1storesApi
            //Assert.IsInstanceOfType(typeof(Apiv1storesApi), instance, "instance is a Apiv1storesApi");
        }


        /// <summary>
        /// Test GetStoreInfo
        /// </summary>
        [Test]
        public void GetStoreInfoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string merchantSuppliedId = null;
            //var response = instance.GetStoreInfo(merchantSuppliedId);
            //Assert.IsInstanceOf<StoreInfo> (response, "response is StoreInfo");
        }

        /// <summary>
        /// Test GetStoreMenuInfo
        /// </summary>
        [Test]
        public void GetStoreMenuInfoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string merchantSuppliedId = null;
            //var response = instance.GetStoreMenuInfo(merchantSuppliedId);
            //Assert.IsInstanceOf<StoreMenuInfo> (response, "response is StoreMenuInfo");
        }

        /// <summary>
        /// Test PatchItemBatchUpdate
        /// </summary>
        [Test]
        public void PatchItemBatchUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string merchantSuppliedId = null;
            //List<UpdateItem> payload = null;
            //instance.PatchItemBatchUpdate(merchantSuppliedId, payload);

        }

        /// <summary>
        /// Test PutItemActivationStatus
        /// </summary>
        [Test]
        public void PutItemActivationStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string merchantSuppliedId = null;
            //List<ItemActivation> payload = null;
            //instance.PutItemActivationStatus(merchantSuppliedId, payload);

        }

        /// <summary>
        /// Test PutItemOptionActivationStatus
        /// </summary>
        [Test]
        public void PutItemOptionActivationStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string merchantSuppliedId = null;
            //List<ItemOptionActivation> payload = null;
            //instance.PutItemOptionActivationStatus(merchantSuppliedId, payload);

        }

        /// <summary>
        /// Test PutStoreActivationStatus
        /// </summary>
        [Test]
        public void PutStoreActivationStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string merchantSuppliedId = null;
            //StoreActivationStatus payload = null;
            //string reason = null;
            //instance.PutStoreActivationStatus(merchantSuppliedId, payload, reason);

        }

    }

}